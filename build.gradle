buildscript {
	ext {
		kotlinVersion = '1.1.51'
		springBootVersion = '1.5.8.RELEASE'
		jackson_version = '2.9.0'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
		classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
		classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
		classpath "se.transmode.gradle:gradle-docker:1.2"
	}
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'docker'

task buildDocker(type: Docker) {
	baseImage = 'develar/java:latest'
	push = project.hasProperty('push')
	tag = 'denisolek/bezpieczenstwo-service'
	addFile {
		from jar
		rename { 'app.jar' }
	}
	setEnvironment('DOCKERIZE_VERSION', 'v0.5.0')
	runCommand "apk update && apk add ca-certificates && update-ca-certificates && apk add openssl"
	runCommand "wget https://github.com/jwilder/dockerize/releases/download/v0.5.0/dockerize-alpine-linux-amd64-v0.5.0.tar.gz"
	runCommand "tar -C /usr/local/bin -xzvf dockerize-alpine-linux-amd64-v0.5.0.tar.gz"
	runCommand "rm dockerize-alpine-linux-amd64-v0.5.0.tar.gz"
}

buildDocker.dependsOn(build)

group = 'com.denisolek'
version = '0.0.1'
sourceCompatibility = 1.8
compileKotlin {
	kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
	kotlinOptions.jvmTarget = "1.8"
}

repositories {
	mavenCentral()
}


dependencies {
	compile group: 'org.springframework.security.oauth', name: 'spring-security-oauth2', version: '2.1.1.RELEASE'
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.jetbrains.kotlin:kotlin-stdlib-jre8:${kotlinVersion}")
	compile("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
	compile group: 'org.hibernate', name: 'hibernate-java8', version: '5.2.10.Final'
	runtime('org.postgresql:postgresql')
	compile "com.fasterxml.jackson.core:jackson-annotations"
	compile "com.fasterxml.jackson.core:jackson-core"
	compile "com.fasterxml.jackson.core:jackson-databind"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8"
	compile "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
	compile "com.fasterxml.jackson.module:jackson-module-kotlin"
//	testCompile('org.springframework.boot:spring-boot-starter-test')
//	testCompile('org.springframework.security:spring-security-test')
}
